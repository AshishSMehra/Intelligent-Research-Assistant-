version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: intelligent-research-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    networks:
      - intelligent-research-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: intelligent-research-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    networks:
      - intelligent-research-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: intelligent-research-api
    ports:
      - "8008:8008"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./qdrant_storage:/app/qdrant_storage
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      - FLASK_ENV=production
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - AWS_KMS_KEY_ID=${AWS_KMS_KEY_ID}
      - VAULT_URL=${VAULT_URL}
      - VAULT_TOKEN=${VAULT_TOKEN}
    depends_on:
      qdrant:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - intelligent-research-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/admin/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Worker Service
  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: intelligent-research-worker
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./qdrant_storage:/app/qdrant_storage
    environment:
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      - WORKER_ENV=production
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - AWS_KMS_KEY_ID=${AWS_KMS_KEY_ID}
      - VAULT_URL=${VAULT_URL}
      - VAULT_TOKEN=${VAULT_TOKEN}
    depends_on:
      qdrant:
        condition: service_healthy
      redis:
        condition: service_healthy
      api:
        condition: service_healthy
    networks:
      - intelligent-research-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ps", "aux", "|", "grep", "python", "|", "grep", "worker.py"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: intelligent-research-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - intelligent-research-network
    restart: unless-stopped
    profiles:
      - production

volumes:
  qdrant_data:
    driver: local
  redis_data:
    driver: local

networks:
  intelligent-research-network:
    driver: bridge 